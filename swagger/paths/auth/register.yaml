tags:
  - Auth
summary: Register a new user
operationId: registerUser
description: 'Create a New User'
security: []
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - name
          - email
          - password
        properties:
          name:
            type: string
            minLength: 3
            maxLength: 30
            example: John Doe
            description: The user's name.
          email:
            type: string
            format: email
            example: john.doe@example.com
            description: The user's email address.
          password:
            type: string
            minLength: 8
            maxLength: 16
            example: password123
            description: The user's password.
responses:
  '201':
    description: Creates a new user
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: Successfully created a user!
            data:
              type: object
              properties:
                _id:
                  type: string
                  example: 672cdd90db9f029835cc2bdc
                  description: User ID created by the database Mongo DB
                name:
                  type: string
                  example: John Doe
                  description: The user's name
                email:
                  type: string
                  example: john.doe@example.com
                  description: The user's email address.
                theme:
                  type: string
                  example: light
                  description: the application theme is selected by the User
                  default: light
  '400':
    $ref: ../../components/responses/400.yaml
  '409':
    description: Response when email address is already in use in database
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 409
            message:
              type: string
              example: ConflictError
            data:
              type: object
              properties:
                message:
                  type: string
                  example: This email address already exists in the database and cannot be reused.



