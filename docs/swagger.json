{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasks_Manager app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Personal Task's Manager app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Support",
      "description": "Operations about users support"
    }
  ],
  "paths": {
    "/support/send-message": {
      "post": {
<<<<<<< Updated upstream
        "tags": [
          "Support"
        ],
        "summary": "Send email to support",
        "operationId": "sendEmailToSupport",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
=======
        "tags": ["Auth"],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Create a New User",
        "security": [],
>>>>>>> Stashed changes
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
<<<<<<< Updated upstream
                "required": [
                  "email",
                  "message"
                ],
=======
                "required": ["name", "email", "password"],
>>>>>>> Stashed changes
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "testuser@mail.com"
                  },
                  "message": {
                    "description": "Message that will be sent to support",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
<<<<<<< Updated upstream
                      "$ref": "#/components/schemas/user"
=======
                      "$ref": "#/components/schemas/registerUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "description": "Response when email address is already in use in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "ConflictError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "This email address already exists in the database and cannot be reused."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user and create session",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "The user's password."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "Z2jvmaNKNxdwAm85WDbqrA=="
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "672cdd90db9f029835cc2bdc",
                              "description": "User ID created by the database Mongo DB"
                            },
                            "name": {
                              "type": "string",
                              "example": "John Doe",
                              "description": "The user's name"
                            },
                            "email": {
                              "type": "string",
                              "example": "john.doe@example.com",
                              "description": "The user's email address."
                            },
                            "password": {
                              "type": "string",
                              "example": "password123",
                              "description": "The user's password."
                            },
                            "theme": {
                              "type": "string",
                              "example": "light",
                              "description": "the application theme is selected by the user"
                            },
                            "avatarUrl": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/denqnnmh2/image/upload/v1731087488/zn0arkh2mdtljnh5mhcf.webp\"",
                              "description": "avatar uploaded by user (if user uploaded)"
                            }
                          }
                        }
                      }
>>>>>>> Stashed changes
                    }
                  }
                }
              }
            }
          },
          "401": {
<<<<<<< Updated upstream
            "$ref": "#/components/responses/401"
=======
            "description": "Unauthorized. Please check your credentials!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Ends the user session by deleting the session data.",
        "operationId": "logoutUser",
        "description": "Successfully logged out, no content returned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully"
>>>>>>> Stashed changes
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/columns/{boardId}": {
      "post": {
        "tags": ["Columns"],
        "summary": "Add new column to the board",

        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "addColumn",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "New Column",
                    "description": "Title of the new column"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 201 },
                    "message": {
                      "type": "string",
                      "example": "Column created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "title": { "type": "string", "example": "New Column" },
                        "boardId": { "type": "string", "example": "12345" },
                        "_id": { "type": "string", "example": "12345" },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-11-10T19:45:42.008Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2024-11-10T19:45:42.008Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access token expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 404 },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/column/{columnId}": {
      "patch": {
        "tags": ["Columns"],
        "summary": "Update column",
        "operationId": "updateColumn",
        "parameters": [
          {
            "name": "columnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "columnId": { "type": "string", "example": "12345" },
                  "title": {
                    "type": "string",
                    "example": "Updated Column title"
                  }
                },
                "required": ["columnId", "title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Column updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Updated Column"
                        },
                        "boardId": { "type": "string", "example": "12345" },
                        "_id": { "type": "string", "example": "12345" },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-11-10T19:45:42.008Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2024-11-10T19:45:42.008Z"
                        }
                      }
                    }
                  },
                  "required": ["status", "message", "data"]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access token expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 404 },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 404 },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete column",
        "operationId": "deleteColumn",
        "parameters": [
          {
            "name": "columnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "columnId": { "type": "string", "example": "12345" },
                  "title": {
                    "type": "string",
                    "example": "Updated Column title"
                  }
                },
                "required": ["columnId"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access token expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 404 },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 404 },
                    "message": {
                      "type": "string",
                      "example": "NotFoundError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
<<<<<<< Updated upstream
=======
    "schemas": {
      "RegisterUser": {
        "$ref": "#/components/schemas/registerUser"
      },
      "registerUser": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe",
            "minLength": 3,
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "minLength": 8
          },
          "theme": {
            "type": "string",
            "example": "light"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad request"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
>>>>>>> Stashed changes
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "66f8ce62907b1bc9bc45a365"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "testcontact@mail.com"
          },
          "photo": {
            "description": "Link to User's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
<<<<<<< Updated upstream
              "required": [
                "status",
                "message",
                "data"
              ],
=======
              "required": ["status", "message"],
>>>>>>> Stashed changes
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "example": {
                    "message": "Contact not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
