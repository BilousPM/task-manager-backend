{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasks_Manager app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Personal Task's Manager app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://task-manager-backend-y4a1.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Create a New User",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe",
                    "description": "The user's name."
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "The user's password."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/registerUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "description": "Response when email address is already in use in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "ConflictError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "This email address already exists in the database and cannot be reused."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user and create session",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "The user's password."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "Z2jvmaNKNxdwAm85WDbqrA=="
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "672cdd90db9f029835cc2bdc",
                              "description": "User ID created by the database Mongo DB"
                            },
                            "name": {
                              "type": "string",
                              "example": "John Doe",
                              "description": "The user's name"
                            },
                            "email": {
                              "type": "string",
                              "example": "john.doe@example.com",
                              "description": "The user's email address."
                            },
                            "password": {
                              "type": "string",
                              "example": "password123",
                              "description": "The user's password."
                            },
                            "theme": {
                              "type": "string",
                              "example": "light",
                              "description": "the application theme is selected by the user"
                            },
                            "avatarUrl": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/denqnnmh2/image/upload/v1731087488/zn0arkh2mdtljnh5mhcf.webp\"",
                              "description": "avatar uploaded by user (if user uploaded)"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Please check your credentials!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Ends the user session by deleting the session data.",
        "operationId": "logoutUser",
        "description": "Successfully logged out, no content returned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "Bad request. No session found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterUser": {
        "$ref": "#/components/schemas/registerUser"
      },
      "registerUser": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe",
            "minLength": 3,
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "minLength": 8
          },
          "theme": {
            "type": "string",
            "example": "light"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad request"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Please check the provided data"
                }
              }
            }
          }
        }
      }
    }
  }
}