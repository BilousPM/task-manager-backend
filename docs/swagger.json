{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasks_Manager app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Personal Task's Manager app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Boards",
      "description": "Boards operations."
    },
    {
      "name": "Support",
      "description": "Operations about users support"
    }
  ],
  "paths": {
    "/user/{current}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User by id",
        "operationId": "getUser",
        "description": "Get User by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "current",
            "required": true,
            "schema": {
              "description": "MongoDB id",
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get User by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found User with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/profile": {
      "patch": {
        "tags": [
          "Profile"
        ],
        "summary": "Partially update a profile",
        "operationId": "patchProfile",
        "description": "Partially updates a profile's information.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "profile",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the profile to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "avatarURL": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Contact not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/user/theme": {
      "patch": {
        "tags": [
          "Theme"
        ],
        "summary": "Partially update a theme",
        "operationId": "patchTheme",
        "description": "Partially updates a theme's information.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the theme to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "avatarURL": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the theme.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Contact not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/user/delete-user": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "description": "Deletes a user by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the user."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Contact not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/support/send-message": {
      "post": {
        "tags": ["Support"],
        "summary": "Send email to support",
        "operationId": "sendEmailToSupport",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["email", "message"],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "testuser@mail.com"
                  },
                  "message": {
                    "description": "Message that will be sent to support",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "Get list of boards",
        "operationId": "getBoards",
        "description": "Get list of board  with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found board!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found boards!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "boards"
                      ],
                      "properties": {
                        "boards": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/board"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Boards"
        ],
        "summary": "Create board",
        "operationId": "createBoard",
        "description": "Create a contact with payload in body",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "_id": {
                    "description": "Board's id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "title": {
                    "description": "Board's name",
                    "type": "string",
                    "example": "Project 1"
                  },
                  "icon": {
                    "description": "Board's icon",
                    "type": "string",
                    "example": "board icon modern"
                  },
                  "background": {
                    "description": "background images",
                    "type": "string",
                    "example": "bg1"
                  },
                  "owner": {
                    "description": "parent user's id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created !"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/board"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/boards/{id}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "Get board columns cards  by id",
        "operationId": "getBoard",
        "description": "Get board by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get board with structure by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "title",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found board"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "board": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "_id": {
                              "type": "string"
                            },
                            "owner": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            }
                          }
                        },
                        "columnsAll": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "boardId": {
                                "type": "string"
                              },
                              "cards": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/card"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Boards"
        ],
        "summary": "patch board by id",
        "operationId": "patchBoard",
        "description": "PATCH board by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PATCH board by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patch board"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/board"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Boards"
        ],
        "summary": "delete board with id",
        "operationId": "deleteBoard",
        "description": "Delete board",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": ["_id", "name"],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "66f8ce62907b1bc9bc45a365"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "testcontact@mail.com"
          },
          "photo": {
            "description": "Link to User's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      },
      "board": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "_id": {
            "description": "Board's id",
            "type": "string",
            "example": "678ce62907b1bc9bc45a365"
          },
          "title": {
            "description": "Board's id",
            "type": "string",
            "example": "678ce62907b1bc9bc45a365"
          },
          "icon": {
            "description": "Board's icon",
            "type": "string",
            "example": "icon-name"
          },
          "background": {
            "description": "Board's background",
            "type": "string",
            "example": "bg1"
          },
          "owner": {
            "description": "User's owner id",
            "type": "string"
          }
        }
      },
      "card": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "description",
          "priority",
          "columnId"
        ],
        "properties": {
          "_id": {
            "description": "Card's id",
            "type": "string",
            "example": "678ce62907b1bc9bc45a365"
          },
          "title": {
            "description": "Name of card",
            "type": "string",
            "example": "develop part 1 "
          },
          "description": {
            "description": "Card's describe text",
            "type": "string",
            "example": "part 1 of backend"
          },
          "deadline": {
            "description": "Card's deadline ",
            "type": "string",
            "example": "01-01-2031"
          },
          "priority": {
            "description": "property card",
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High",
              "Without priority"
            ],
            "example": "Low"
          },
          "columnId": {
            "description": "parent Columns's id",
            "type": "string",
            "example": "678ce62907b1bc9bc45a365"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "example": {
                    "message": " not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
