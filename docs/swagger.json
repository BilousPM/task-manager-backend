{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasks_Manager app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Personal Task's Manager app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://task-manager-backend-y4a1.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "User's operation."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Create a New User",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe",
                    "description": "The user's name."
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "The user's password."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "672cdd90db9f029835cc2bdc",
                          "description": "User ID created by the database Mongo DB"
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe",
                          "description": "The user's name"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com",
                          "description": "The user's email address."
                        },
                        "theme": {
                          "type": "string",
                          "example": "light",
                          "description": "the application theme is selected by the User",
                          "default": "light"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "description": "Response when email address is already in use in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "ConflictError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "This email address already exists in the database and cannot be reused."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user and create session",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "The user's password."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "Z2jvmaNKNxdwAm85WDbqrA=="
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "672cdd90db9f029835cc2bdc",
                              "description": "User ID created by the database Mongo DB"
                            },
                            "name": {
                              "type": "string",
                              "example": "John Doe",
                              "description": "The user's name"
                            },
                            "email": {
                              "type": "string",
                              "example": "john.doe@example.com",
                              "description": "The user's email address."
                            },
                            "password": {
                              "type": "string",
                              "example": "password123",
                              "description": "The user's password."
                            },
                            "theme": {
                              "type": "string",
                              "example": "light",
                              "description": "the application theme is selected by the user"
                            },
                            "avatarUrl": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/denqnnmh2/image/upload/v1731087488/zn0arkh2mdtljnh5mhcf.webp\"",
                              "description": "avatar uploaded by user (if user uploaded)"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Ends the user session by deleting the session data.",
        "operationId": "logoutUser",
        "description": "Successfully logged out, no content returned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User by id",
        "operationId": "getUser",
        "description": "Get User by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get User by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found User with id 65ca67e7ae7f10c88b598384 !"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "$ref": "#/components/schemas/userSchema"
                        },
                        "boards": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/boardSchema"
                          }
                        },
                        "columns": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/columnSchema"
                          }
                        },
                        "cards": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/cardSchema"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/profile": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Partially update a profile",
        "operationId": "patchProfile",
        "description": "Partially updates a profile's information.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the user",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "The user's password"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "User's avatar image file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userSchema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/theme": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update a theme",
        "operationId": "patchTheme",
        "description": "Partially updates a theme's information.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "theme"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "dark",
                    "description": "background theme name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the theme.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Theme changed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "theme": {
                          "type": "string",
                          "example": "dark",
                          "enum": [
                            "light",
                            "dark",
                            "violet"
                          ],
                          "description": "Preferred theme of the user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/delete-user": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "description": "Deletes a user by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successful operation"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/support/send-message": {
      "post": {
        "tags": [
          "Support"
        ],
        "summary": "Send email to support",
        "operationId": "sendEmailToSupport",
        "description": "Send Message to support",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "message"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "testuser@mail.com"
                  },
                  "message": {
                    "description": "Message that will be sent to support",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Hello, testuser@mail.com. The message sent to support"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "When there are no emails or messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email and message are required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "When the email was not sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send the email, please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterUser": {
        "$ref": "#/components/schemas/registerUser"
      },
      "userSchema": {
        "required": [
          "_id",
          "name",
          "email",
          "theme"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the user",
            "example": "673058d9e57ecb50c727d306"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user",
            "example": "Bob Fox"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user",
            "example": "mrfox@gmail.com"
          },
          "theme": {
            "type": "string",
            "description": "Preferred theme of the user",
            "enum": [
              "light",
              "dark",
              "violet"
            ],
            "example": "light"
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/denqnnmh2/image/upload/v1731267859/cfhq5utupyp2aowrlvoj.webp\""
          }
        }
      },
      "boardSchema": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "icon",
          "background",
          "owner"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique board identifier",
            "example": "67305358e57ecb50c727d2e1"
          },
          "title": {
            "type": "string",
            "description": "Board name",
            "example": "Board #1"
          },
          "icon": {
            "type": "string",
            "description": "Board icon",
            "example": "default"
          },
          "background": {
            "type": "string",
            "description": "Blackboard background",
            "example": "default"
          },
          "owner": {
            "type": "string",
            "description": "Board owner ID",
            "example": "67302f00ac49936cae898e30"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the board was created",
            "example": "2024-11-10T06:31:52.478Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the board was last updated",
            "example": "2024-11-10T06:31:52.478Z"
          }
        }
      },
      "columnSchema": {
        "required": [
          "_id",
          "title",
          "boardId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the column",
            "example": "67305580e57ecb50c727d2ea"
          },
          "title": {
            "type": "string",
            "description": "Title of the column",
            "example": "To Do something more #1"
          },
          "boardId": {
            "type": "string",
            "description": "Unique identifier of the board this column belongs to",
            "example": "672babd7db3166fdaba54a5c"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the column was created",
            "example": "2024-11-10T06:41:04.611Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the column was last updated",
            "example": "2024-11-10T06:41:04.611Z"
          }
        }
      },
      "cardSchema": {
        "required": [
          "_id",
          "title",
          "description",
          "priority",
          "columnId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the step",
            "example": "673056fde57ecb50c727d2fd"
          },
          "title": {
            "type": "string",
            "description": "Title of the step",
            "example": "step 1"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the step",
            "example": "Say Hello Everybody"
          },
          "priority": {
            "type": "string",
            "description": "Priority level of the step",
            "enum": [
              "High",
              "Medium",
              "Low",
              "Without priority"
            ],
            "example": "Without priority"
          },
          "columnId": {
            "type": "string",
            "description": "Identifier of the column this step belongs to",
            "example": "672bcf7343e2322b1b847fb3"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the step was created",
            "example": "2024-11-10T06:47:25.565Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the step was last updated",
            "example": "2024-11-10T06:47:25.565Z"
          }
        }
      },
      "registerUser": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe",
            "minLength": 3,
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "minLength": 8
          },
          "theme": {
            "type": "string",
            "example": "light"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Please check the provided data"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}